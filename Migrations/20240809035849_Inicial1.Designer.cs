// <auto-generated />
using System;
using APIBiblioteca.LibraryDbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIBiblioteca.Migrations
{
    [DbContext(typeof(BibliotecaDbContext))]
    [Migration("20240809035849_Inicial1")]
    partial class Inicial1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APIBiblioteca.Model.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("APIBiblioteca.Model.DetallePrestamo", b =>
                {
                    b.Property<int>("IdDetallePrestamo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetallePrestamo"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdLibro")
                        .HasColumnType("int");

                    b.Property<int?>("IdLibroNavigationIdLibro")
                        .HasColumnType("int");

                    b.Property<int?>("IdPrestamo")
                        .HasColumnType("int");

                    b.Property<int?>("IdPrestamoNavigationIdPrestamo")
                        .HasColumnType("int");

                    b.HasKey("IdDetallePrestamo");

                    b.HasIndex("IdLibroNavigationIdLibro");

                    b.HasIndex("IdPrestamoNavigationIdPrestamo");

                    b.ToTable("DetallePrestamos");
                });

            modelBuilder.Entity("APIBiblioteca.Model.Libro", b =>
                {
                    b.Property<int>("IdLibro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLibro"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdCategoriaNavigationIdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.HasKey("IdLibro");

                    b.HasIndex("IdCategoriaNavigationIdCategoria");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("APIBiblioteca.Model.Menu", b =>
                {
                    b.Property<int>("IdMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMenu"));

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMenu");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("APIBiblioteca.Model.MenuRol", b =>
                {
                    b.Property<int>("IdMenuRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMenuRol"));

                    b.Property<int?>("IdMenu")
                        .HasColumnType("int");

                    b.Property<int?>("IdMenuNavigationIdMenu")
                        .HasColumnType("int");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int");

                    b.Property<int?>("IdRolNavigationIdRol")
                        .HasColumnType("int");

                    b.HasKey("IdMenuRol");

                    b.HasIndex("IdMenuNavigationIdMenu");

                    b.HasIndex("IdRolNavigationIdRol");

                    b.ToTable("MenuRoles");
                });

            modelBuilder.Entity("APIBiblioteca.Model.NumeroDocumento", b =>
                {
                    b.Property<int>("IdNumeroDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNumeroDocumento"));

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("UltimoNumero")
                        .HasColumnType("int");

                    b.HasKey("IdNumeroDocumento");

                    b.ToTable("NumeroDocumentos");
                });

            modelBuilder.Entity("APIBiblioteca.Model.Prestamo", b =>
                {
                    b.Property<int>("IdPrestamo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPrestamo"));

                    b.Property<bool>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaDevolucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPrestamo");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("APIBiblioteca.Model.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<DateTime?>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("APIBiblioteca.Model.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsActivo")
                        .HasColumnType("bit");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<int?>("IdRolNavigationIdRol")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdRolNavigationIdRol");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("APIBiblioteca.Model.DetallePrestamo", b =>
                {
                    b.HasOne("APIBiblioteca.Model.Libro", "IdLibroNavigation")
                        .WithMany()
                        .HasForeignKey("IdLibroNavigationIdLibro");

                    b.HasOne("APIBiblioteca.Model.Prestamo", "IdPrestamoNavigation")
                        .WithMany("DetallePrestamo")
                        .HasForeignKey("IdPrestamoNavigationIdPrestamo");

                    b.Navigation("IdLibroNavigation");

                    b.Navigation("IdPrestamoNavigation");
                });

            modelBuilder.Entity("APIBiblioteca.Model.Libro", b =>
                {
                    b.HasOne("APIBiblioteca.Model.Categoria", "IdCategoriaNavigation")
                        .WithMany()
                        .HasForeignKey("IdCategoriaNavigationIdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdCategoriaNavigation");
                });

            modelBuilder.Entity("APIBiblioteca.Model.MenuRol", b =>
                {
                    b.HasOne("APIBiblioteca.Model.Menu", "IdMenuNavigation")
                        .WithMany("MenuRols")
                        .HasForeignKey("IdMenuNavigationIdMenu");

                    b.HasOne("APIBiblioteca.Model.Rol", "IdRolNavigation")
                        .WithMany("MenuRols")
                        .HasForeignKey("IdRolNavigationIdRol");

                    b.Navigation("IdMenuNavigation");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("APIBiblioteca.Model.Usuario", b =>
                {
                    b.HasOne("APIBiblioteca.Model.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRolNavigationIdRol");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("APIBiblioteca.Model.Menu", b =>
                {
                    b.Navigation("MenuRols");
                });

            modelBuilder.Entity("APIBiblioteca.Model.Prestamo", b =>
                {
                    b.Navigation("DetallePrestamo");
                });

            modelBuilder.Entity("APIBiblioteca.Model.Rol", b =>
                {
                    b.Navigation("MenuRols");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
